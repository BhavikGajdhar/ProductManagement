{"version":3,"file":"static/js/692.1eb8d36d.chunk.js","mappings":"4PAuDA,EApDgC,SAACA,GAC/B,IAAMC,GAAiBC,EAAAA,EAAAA,WAAS,SAACC,GAC/B,IAAIC,EAAcD,EAAME,OACpBD,EAAYE,QAAU,GACxBN,EAAMO,YAAYH,GAEN,KAAVD,GACFH,EAAMO,YAAY,MAEnB,KAEH,OACE,iCACE,gBAAKC,UAAU,mBAAf,UACE,kBACEC,KAAK,OACLC,KAAK,aACLF,UAAU,0DACVG,YAAY,YACZC,aAAa,MACbC,SAAU,SAACC,GAAD,OAAOb,EAAea,EAAEC,OAAOZ,aAG7C,gBAAKK,UAAU,yIAAf,SACGR,EAAMgB,OAAOC,MACZjB,EAAMgB,OAAOC,KAAKC,KAAI,SAACC,GACrB,OACI,SAAC,KAAD,CAAuBC,GAAE,mBAAcD,EAAQE,IAA/C,UACE,iBAAKb,UAAU,6FAAf,WACE,gBACEA,UAAU,6CACVc,IAAKH,EAAQI,MACbC,IAAI,MAEN,eAAIhB,UAAU,iDAAd,SACGW,EAAQM,SAEX,iBAAKjB,UAAU,yCAAf,WACE,eAAGA,UAAU,YAAb,cAA2BW,EAAQO,UACnC,yBACGP,EAAQQ,OAAOC,KADlB,IACyBT,EAAQQ,OAAOE,gBAbnCV,EAAQE,aCrB7BS,EAAuB,SAAC9B,GAC5B,OAA0B+B,EAAAA,EAAAA,YAA1B,eAAO5B,EAAP,KAAc6B,EAAd,KAeA,GAAyBC,EAAAA,EAAAA,aAbL,SAACC,EAAYC,GAC/B,OAAQA,EAAO1B,MACb,IAAK,aACH,OAAO,kBAAKyB,GAAZ,IAAmBjB,KAAMiB,EAAMjB,KAAKmB,OAAOD,EAAOlB,QACpD,IAAK,iBACH,OAAO,kBAAKiB,GAAZ,IAAmBjB,KAAMkB,EAAOlB,OAClC,IAAK,gBACH,OAAO,kBAAKiB,GAAZ,IAAmBG,SAAUF,EAAOE,WACtC,QACE,OAAOH,KAIoC,CAC/CjB,KAAM,GACNoB,UAAU,IAFZ,eAAOC,EAAP,KAAaC,EAAb,MAKAC,EAAAA,EAAAA,YAAU,WACRD,EAAS,CAAE9B,KAAM,gBAAiB4B,UAAU,KAC5CI,EAAAA,EAAAA,MACGC,MAAK,SAACC,GACL,IAAI1B,EAAO0B,EAAI1B,KACfsB,EAAS,CAAE9B,KAAM,aAAcQ,KAAAA,IAC/BsB,EAAS,CAAE9B,KAAM,gBAAiB4B,UAAU,OAE7CO,OAAM,SAACC,GAEN,OADAN,EAAS,CAAE9B,KAAM,gBAAiB4B,UAAU,IACrCQ,MAEXC,EAAAA,EAAAA,MAAmBJ,MAAK,SAACC,GACvBX,EAASW,EAAI1B,KAAKX,aAEnB,CAACiC,IAQJ,OACE,4BACE,SAACQ,EAAA,EAAD,CAAQ5C,MAAOA,KACf,SAAC,EAAD,CAAyBa,OAAQsB,EAAM/B,YATpB,SAACJ,IACtB6C,EAAAA,EAAAA,IAAqB7C,GAAOuC,MAAK,SAACC,GAChC,IAAI1B,EAAO0B,EAAI1B,KACfsB,EAAS,CAAE9B,KAAM,iBAAkBQ,KAAAA","sources":["components/product/productListContainer/productListPresentation/ProductListPresentation.tsx","components/product/productListContainer/ProductListContainer.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { debounce } from \"lodash\";\r\n\r\nconst ProductListPresentation = (props: any) => {\r\n  const onChangeSearch = debounce((value: any) => {\r\n    let trimmedText = value.trim();\r\n    if (trimmedText.length >= 2) {\r\n      props.searchValue(trimmedText);\r\n    }\r\n    if (value === \"\") {\r\n      props.searchValue(\"\");\r\n    }\r\n  }, 750);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-gray-100 pt-6\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchIdol\"\r\n          className=\"w-1/4 border border-gray-300 rounded-md mx-10 px-4 py-1\"\r\n          placeholder=\"Search...\"\r\n          autoComplete=\"off\"\r\n          onChange={(e) => onChangeSearch(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"grid xs:grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 px-10 py-6 gap-8 bg-gray-100 flex-grow overflow-y-auto\">\r\n        {props.Values.data &&\r\n          props.Values.data.map((product: any) => {\r\n            return (\r\n                <Link key={product.id} to={`/details/${product.id}`}>\r\n                  <div className=\"bg-white shadow-lg transition-all flex flex-col px-8 py-3 rounded-lg cursor-pointer h-full\">\r\n                    <img\r\n                      className=\"w-full h-full object-center object-contain\"\r\n                      src={product.image}\r\n                      alt=\"\"\r\n                    />\r\n                    <h4 className=\"font-semibold text-base pt-4 pb-1 line-clamp-1\">\r\n                      {product.title}\r\n                    </h4>\r\n                    <div className=\"py-4 flex items-center justify-between\">\r\n                      <p className=\"font-bold\">${product.price}</p>\r\n                      <p>\r\n                        {product.rating.rate}/{product.rating.count}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListPresentation;\r\n","import { useEffect, useReducer, useState } from \"react\";\r\nimport { Header } from \"../../header/Header\";\r\nimport {\r\n  getAddToCartData,\r\n  getProductData,\r\n  searchGetProductData,\r\n} from \"../service/ProductService\";\r\nimport ProductListPresentation from \"./productListPresentation/ProductListPresentation\";\r\n\r\nconst ProductListContainer = (props: any) => {\r\n  const [value, setValue] = useState<any>();\r\n\r\n  const dataReducer = (state: any, action: any) => {\r\n    switch (action.type) {\r\n      case \"STACK_DATA\":\r\n        return { ...state, data: state.data.concat(action.data) };\r\n      case \"SEARCHING_DATA\":\r\n        return { ...state, data: action.data };\r\n      case \"FETCHING_DATA\":\r\n        return { ...state, fetching: action.fetching };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const [Data, Dispatch] = useReducer(dataReducer, {\r\n    data: [],\r\n    fetching: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    Dispatch({ type: \"FETCHING_DATA\", fetching: true });\r\n    getProductData()\r\n      .then((res: any) => {\r\n        let data = res.data;\r\n        Dispatch({ type: \"STACK_DATA\", data });\r\n        Dispatch({ type: \"FETCHING_DATA\", fetching: false });\r\n      })\r\n      .catch((error) => {\r\n        Dispatch({ type: \"FETCHING_DATA\", fetching: false });\r\n        return error;\r\n      });\r\n    getAddToCartData().then((res: any) => {\r\n      setValue(res.data.length);\r\n    });\r\n  }, [Dispatch]);\r\n\r\n  const searchingValue = (value: any) => {\r\n    searchGetProductData(value).then((res: any) => {\r\n      let data = res.data;\r\n      Dispatch({ type: \"SEARCHING_DATA\", data });\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Header value={value} />\r\n      <ProductListPresentation Values={Data} searchValue={searchingValue} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { ProductListContainer };\r\n"],"names":["props","onChangeSearch","debounce","value","trimmedText","trim","length","searchValue","className","type","name","placeholder","autoComplete","onChange","e","target","Values","data","map","product","to","id","src","image","alt","title","price","rating","rate","count","ProductListContainer","useState","setValue","useReducer","state","action","concat","fetching","Data","Dispatch","useEffect","getProductData","then","res","catch","error","getAddToCartData","Header","searchGetProductData"],"sourceRoot":""}