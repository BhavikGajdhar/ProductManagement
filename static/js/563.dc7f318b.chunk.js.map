{"version":3,"file":"static/js/563.dc7f318b.chunk.js","mappings":"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","sources":["components/userProfile/userProfileFormContainer/userProfileFormPresentation/UserProfileFormPresentation.tsx","components/userProfile/service/UserProfileService.ts","components/userProfile/userProfileFormContainer/UserProfileFormContainer.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { getUser } from \"../../service/UserProfileService\";\r\n\r\nexport const ValidationSchema = Yup.object().shape({\r\n  firstName: Yup.string().trim().required(\"FirstName is required\").nullable(),\r\n  lastName: Yup.string().trim().required(\"LastName is required\"),\r\n  email: Yup.string().trim().required(\"Email is required.\"),\r\n});\r\nconst UserProfileFormPresentation = (props: any) => {\r\n  const { user } = useAuth0();\r\n\r\n  const [name] = useState<any>(user?.nickname?.split(\".\"));\r\n  const profileValue = {\r\n    firstName: name[0],\r\n    lastName: name[1],\r\n    email: user?.email,\r\n  };\r\n  const [profile, setProfile] = useState<any>(profileValue);\r\n  const [disable] = useState<any>(true);\r\n\r\n  const profileValueSet = {\r\n    firstName: profile.firstName,\r\n    lastName: profile.lastName,\r\n    email: profile.email,\r\n    id: profile.id,\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser().then((res: any) => {\r\n      setProfile(res.data[0]);\r\n    });\r\n  }, []);\r\n  const handleSubmit = (values: any) => {\r\n    if (values.id) {\r\n      props.updateUser(values);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex-grow flex justify-center\">\r\n      <div className=\"w-full lg:w-1/2\">\r\n        <div className=\"flex justify-center\">\r\n          <figure className=\"my-6\">\r\n            <img\r\n              className=\"w-16 h-16 rounded-full object-cover\"\r\n              src={user?.picture}\r\n              alt=\"\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <Formik\r\n          initialValues={profileValueSet ? profileValueSet : profileValue}\r\n          enableReinitialize={true}\r\n          validationSchema={ValidationSchema}\r\n          onSubmit={(values: any) => {\r\n            handleSubmit(values);\r\n          }}\r\n        >\r\n          {(formik) => {\r\n            const { values, handleChange } = formik;\r\n            return (\r\n              <Form>\r\n                <div className=\"flex flex-col space-y-5 mt-8 px-6\">\r\n                  <div className=\"flex flex-col space-y-2\">\r\n                    <label className=\"text-sm text-gray-400\" htmlFor=\"name\">\r\n                      First Name\r\n                    </label>\r\n                    <Field\r\n                      className=\"border px-3 py-2 rounded bg-gray-100 font-medium\"\r\n                      type=\"text\"\r\n                      name=\"firstName\"\r\n                      id=\"firstName\"\r\n                      value={values.firstName}\r\n                      onChange={handleChange}\r\n                      // disabled={disable}\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"firstName\"\r\n                      component=\"small\"\r\n                      className=\"error font-semibold text-red-500\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col space-y-2\">\r\n                    <label className=\"text-sm text-gray-400\" htmlFor=\"name\">\r\n                      Last Name\r\n                    </label>\r\n                    <Field\r\n                      className=\"border px-3 py-2 rounded bg-gray-100 font-medium\"\r\n                      type=\"text\"\r\n                      name=\"lastName\"\r\n                      id=\"lastName\"\r\n                      value={values.lastName}\r\n                      onChange={handleChange}\r\n                      // disabled={disable}\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"lastName\"\r\n                      component=\"small\"\r\n                      className=\"error font-semibold text-red-500\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col space-y-2\">\r\n                    <label className=\"text-sm text-gray-400\" htmlFor=\"name\">\r\n                      Email Address\r\n                    </label>\r\n                    <Field\r\n                      className=\"border px-3 py-2 rounded bg-gray-100 font-medium\"\r\n                      type=\"text\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      value={user?.email}\r\n                      onChange={handleChange}\r\n                      disabled={disable}\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"email\"\r\n                      component=\"small\"\r\n                      className=\"error font-semibold text-red-500\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex justify-center \">\r\n                    <button\r\n                      // onClick={() => setDisable(!disable)}\r\n                      className=\"bg-sky-500 text-white px-9 py-1 rounded\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfileFormPresentation;\r\n","\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const getUser=()=>{\r\n    return axios.get('http://localhost:4500/user/');\r\n}\r\nexport const getCartData=()=>{\r\n    return axios.get('http://localhost:4500/addToCart/');\r\n}\r\nexport const updateUser=(id:number,value:any)=>{\r\n    return axios.put('http://localhost:4500/user/'+id,value);\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Header } from '../../header/Header';\r\nimport { getCartData, updateUser } from '../service/UserProfileService';\r\nimport UserProfileFormPresentation from './userProfileFormPresentation/UserProfileFormPresentation'\r\n\r\nconst UserProfileFormContainer = (props:any) => {\r\n  const [value,setValue]=useState<any>();\r\n  let navigate = useNavigate();\r\n  useEffect(()=>{\r\n    getCartData().then((res:any)=>{\r\n      setValue(res.data.length);\r\n    })\r\n  },[])\r\n  const userUpdate=(value:any)=>{\r\n    updateUser(value.id,value);\r\n    navigate(`/`);\r\n  }\r\n  return (\r\n    <>\r\n    <Header value={value}/>\r\n        <UserProfileFormPresentation updateUser={userUpdate}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { UserProfileFormContainer }"],"names":["ValidationSchema","Yup","shape","firstName","trim","required","nullable","lastName","email","props","user","useAuth0","useState","nickname","split","name","profileValue","profile","setProfile","disable","profileValueSet","id","useEffect","axios","then","res","data","className","src","picture","alt","initialValues","enableReinitialize","validationSchema","onSubmit","values","updateUser","handleSubmit","formik","handleChange","htmlFor","type","value","onChange","component","disabled","UserProfileFormContainer","setValue","navigate","useNavigate","length","Header"],"sourceRoot":""}